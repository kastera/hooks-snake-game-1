{"version":3,"sources":["components/Navigation.jsx","components/Field.jsx","components/Button.jsx","components/ManipulationPanel.jsx","utils/index.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","length","difficulty","onChangeDifficulty","upVisibility","downVisibility","className","onClick","Field","fields","map","row","column","Button","status","onStart","onStop","onRestart","ManipulationPanel","onChange","icon","faArrowLeft","faArrowUp","faArrowDown","faArrowRight","getFoodPosition","fieldSize","excludes","x","Math","floor","random","y","some","item","initFields","snake","i","cols","Array","fill","push","food","initialPosition","initialValues","Difficulty","GameStatus","Object","freeze","init","playing","suspended","gameover","Direction","up","right","left","down","DirectionKeyCodeMap","OppositeDirection","Delta","timer","undefined","App","useState","setFields","body","setBody","setStatus","direction","setDirection","setDifficulty","tick","setTick","unsubscribe","clearInterval","useCallback","useEffect","setInterval","handleMoving","position","delta","newPosition","isEatingMyself","newBody","removingTrack","pop","unshift","onChangeDirection","newDirection","handleKeyDown","e","keyCode","document","addEventListener","removeEventListener","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bbfbdc46.chunk.js","sourcesContent":["import React from 'react';\n\nconst Navigation = ({ length, difficulty = 3, onChangeDifficulty }) => {\n  const upVisibility = difficulty < 5 ? '' : 'is-hidden'\n  const downVisibility = difficulty > 1 ? '' : 'is-hidden'\n  const onUpDifficulty = () => onChangeDifficulty(difficulty + 1)\n  const onDownDifficulty = () => onChangeDifficulty(difficulty -1)\n  return (\n    <div className=\"navigation\">\n      <div className=\"navigation-item\">\n          <span className=\"navigation-label\">Length: </span>\n          <div className=\"navigation-item-number-container\">\n            <div className=\"num-board\">{length}</div>\n          </div>\n      </div>\n      <div className=\"navigation-item\">\n        <span className=\"navigation-label\">Difficulty: </span>\n        <div className=\"navigation-item-number-container\">\n          <span className=\"num-board\">{difficulty}</span>\n          <div className=\"difficulty-button-container\">\n            <div\n               className={`difficulty-button difficulty-up ${upVisibility}`}\n               onClick={onUpDifficulty}\n            ></div>\n            <div\n               className={`difficulty-button difficulty-down ${downVisibility}`}\n               onClick={onDownDifficulty}\n            ></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n};\n\nexport default Navigation;","import React from 'react';\n\nconst Field = ({ fields }) => {\n  return (\n    <div className=\"field\">\n      {\n        fields.map((row) => {\n          return row.map((column) => {\n            return <div className={`dots ${column}`}></div>\n          })\n        })\n      }\n    </div>\n  );\n};\n\nexport default Field;","import React from 'react';\n\nconst Button = ({ status, onStart, onStop, onRestart }) => {\n  return (\n    <div className=\"button\">\n       { status === \"gameover\" && <button className=\"btn btn-gameover\" onClick={onRestart}>gameover</button> }\n       { status === \"init\" && <button className=\"btn btn-init\" onClick={onStart}>start</button> }\n       { status === \"suspended\" && <button className=\"btn btn-suspended\" onClick={onStart}>start</button> }\n       { status === \"playing\" && <button className=\"btn btn-playing\" onClick={onStop}>stop</button> }\n    </div>\n  );\n};\n\nexport default Button;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n   faArrowLeft,\n   faArrowUp,\n   faArrowDown,\n   faArrowRight\n} from '@fortawesome/free-solid-svg-icons'\n\nconst ManipulationPanel = ({ onChange }) => {\n  const onUp = () => onChange('up')\n  const onRight = () => onChange('right')\n  const onLeft = () => onChange('left')\n  const onDown = () => onChange('down')\n\n  return (\n    <div className=\"manipulation-panel\">\n        <button className=\"manipulation-btn btn btn-left\" onClick={onLeft}>\n         <FontAwesomeIcon icon={faArrowLeft} />\n        </button>\n        <div>\n        <button className=\"manipulation-btn btn btn-up\" onClick={onUp}>\n           <FontAwesomeIcon icon={faArrowUp} />\n        </button>\n        <button className=\"manipulation-btn btn btn-down\" onClick={onDown}>\n           <FontAwesomeIcon icon={faArrowDown} />\n        </button>\n        </div>\n        <button className=\"manipulation-btn btn btn-right\" onClick={onRight}>\n           <FontAwesomeIcon icon={faArrowRight} />\n        </button>\n     </div>\n   );\n };\n\nexport default ManipulationPanel;","export const getFoodPosition = (fieldSize, excludes) => {\n  while(true) {\n    const x = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\n    const y = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\n    const conflict = excludes.some(item => item.x === x && item.y === y)\n\n    if (!conflict) {\n      return { x, y };\n    }\n  }\n}\n\nexport const initFields = (fieldSize, snake) => {\n    const fields = []\n    for (let i = 0; i < fieldSize; i++) {\n      const cols = new Array(fieldSize).fill('')\n      fields.push(cols)\n    }\n    fields[snake.y][snake.x] = 'snake'\n\n    const food = getFoodPosition(fieldSize, [snake])\n    fields[food.y][food.x] = 'food'\n  \n    return fields\n  }\n  ","import React, { useCallback, useEffect, useState } from 'react';\nimport Navigation from './components/Navigation'\nimport Field from './components/Field';\nimport Button from './components/Button';\nimport ManipulationPanel from './components/ManipulationPanel';\nimport { initFields, getFoodPosition } from './utils'\n\nconst initialPosition = { x: 17, y: 17 }\nconst initialValues = initFields(35, initialPosition)\nconst defaultInterval = 100\nconst defaultDifficulty = 3\n\nconst Difficulty = [1000, 500, 100, 50, 10]\n\n\nconst GameStatus = Object.freeze({\n    init: 'init',\n    playing: 'playing',\n    suspended: 'suspended',\n    gameover: 'gameover'\n  })\n\n  const Direction = Object.freeze({\n    up: 'up',\n    right: 'right',\n    left: 'left',\n    down: 'down'\n  })\n\n  const DirectionKeyCodeMap = Object.freeze({\n    37: Direction.left,\n    38: Direction.up,\n    39: Direction.right,\n    40: Direction.down,\n  })\n\n  const OppositeDirection = Object.freeze({\n    up: 'down',\n    right: 'left',\n    left: 'right',\n    down: 'up'\n  })\n\n  const Delta = Object.freeze({\n    up: { x: 0, y: -1 },\n    right: { x:  1, y: 0 },\n    left: { x: -1, y: 0 },\n    down: { x: 0, y: 1 },\n  })\n\nlet timer = undefined\n\nconst isCollision = (fieldSize, position) => {\n  if (position.y < 0 || position.x < 0) {\n    return true;\n  }\n\n  if (position.y > fieldSize - 1 || position.x > fieldSize - 1) {\n    return true;\n  }\n\n  return false;\n};\n\nconst isEatingMyself = (fields, position) => {\n  return fields[position.y][position.x] === 'snake'\n}\n\nfunction App() {\n  const [fields, setFields] = useState(initialValues)\n  const [body, setBody] = useState([])\n  const [status, setStatus] = useState(GameStatus.init)\n  const [direction, setDirection] = useState(Direction.up)\n  const [difficulty, setDifficulty] = useState(defaultDifficulty)\n  const [tick, setTick] = useState(0)\n \n  const unsubscribe = () => {\n    if (!timer) {\n      return\n    }\n    clearInterval(timer)\n  }\n\n  const onChangeDifficulty = useCallback((difficulty) => {\n    if (status !== GameStatus.init) {\n      return\n    }\n    if (difficulty < 1 || difficulty > Difficulty.length) {\n      return\n    }\n    setDifficulty(difficulty)\n  }, [status, difficulty])\n\n  useEffect(() => {\n    setBody([initialPosition])\n    // ゲームの中の時間を管理する\n    const interval = Difficulty[difficulty - 1]\n    timer = setInterval(() => {\n      setTick(tick => tick + 1)\n    }, interval)\n    return unsubscribe\n  }, [difficulty])\n\n  useEffect(() => {\n    if (body.length === 0 || status !== GameStatus.playing) {\n       return\n     }\n     const canContinue = handleMoving()\n     if (!canContinue) {\n      unsubscribe()\n      setStatus(GameStatus.gameover)\n     }\n  }, [tick])\n\n  const onStart = () => setStatus(GameStatus.playing)\n\n  const onStop = () => setStatus(GameStatus.suspended)\n\n  const onRestart = () => {\n    timer = setInterval(() => {\n      setTick(tick => tick + 1)\n    }, defaultInterval)\n    \n    setStatus(GameStatus.init)\n    setBody([initialPosition])\n    setDirection(Direction.up)\n    setFields(initFields(35, initialPosition))\n  }\n\n  const handleMoving = () => {\n    const { x, y } = body[0]\n    const delta = Delta[direction]\n    const newPosition = {\n      x: x + delta.x,\n      y: y + delta.y\n    }\n    if (isCollision(fields.length, newPosition) || isEatingMyself(fields, newPosition)) {\n      return false\n    }\n    const newBody = [...body]\n     if (fields[newPosition.y][newPosition.x] !== 'food') {\n       const removingTrack = newBody.pop()\n       fields[removingTrack.y][removingTrack.x] = ''\n     } else {\n      const food = getFoodPosition(fields.length, [...newBody, newPosition])\n      fields[food.y][food.x] = 'food'\n    }\n    fields[newPosition.y][newPosition.x] = 'snake'\n    newBody.unshift(newPosition)\n\n    setBody(newBody)\n    setFields(fields)\n    return true\n  }\n\n  const onChangeDirection = useCallback((newDirection) => {\n    if (status !== GameStatus.playing) {\n      return direction\n    }\n    if (OppositeDirection[direction] === newDirection) {\n      return\n    }\n    setDirection(newDirection)\n  }, [direction ,status])\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      const newDirection = DirectionKeyCodeMap[e.keyCode];\n      if (!newDirection) {\n        return;\n      }\n\n      onChangeDirection(newDirection);\n    };\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown)\n  }, [onChangeDirection])\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n         <div className=\"title-container\">\n           <h1 className=\"title\">Snake Game</h1>\n         </div>\n         <Navigation length={body.length} difficulty={difficulty} onChangeDifficulty={onChangeDifficulty} />\n       </header>\n       <main className=\"main\">\n         <Field fields={fields} />\n       </main>\n       <footer className=\"footer\">\n          <Button\n            status={status}\n            onStop={onStop}\n            onStart={onStart}\n            onRestart={onRestart}\n          />\n         <ManipulationPanel onChange={onChangeDirection} />\n       </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}